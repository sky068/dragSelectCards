{"version":3,"sources":["assets/Script/DragSelect.js"],"names":["cc","Class","Component","start","node","on","Node","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","cardsArr","getChildren","card","CARD_DISTANCE","width","anchorX","getComponent","Layout","spacingX","log","event","pos","getLocation","beginPos","_beginPos","convertToNodeSpaceAR","_checkSelectCard","movePos","_checkSelectCardReverse","_onSelectCardEnd","ctrl","touched","selected","endPos","isBegin","len","length","i","getBoundingBox","contains","w","Math","max","abs","x","h","y","min","touchRect","rect","p1","Intersection","rectRect"],"mappings":"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","sourceRoot":"/","sourcesContent":["/**\n * Created by skyxu on 2018/11/1.\n * \n * 滑动选择卡牌组件\n * 把此组件拖放到卡牌根节点即可，卡牌根节点添加cc.Layout组件来自动布局\n * \n */\n\n\ncc.Class({\n    extends: cc.Component,\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n\n\n        this.cardsArr = this.node.getChildren();\n        let card = this.cardsArr[0];\n        // 指左侧卡牌锚点到右侧相邻卡牌边缘的距离\n        this.CARD_DISTANCE = card.width*card.anchorX + this.node.getComponent(cc.Layout).spacingX;\n        cc.log(\"CARD_DISTANCE: \" + this.CARD_DISTANCE);\n    },\n\n    onTouchStart(event){\n        let pos = event.getLocation();\n        let beginPos = this._beginPos = this.node.convertToNodeSpaceAR(pos);\n        this._checkSelectCard(beginPos, beginPos, true);\n    },\n\n    onTouchMove(event){\n        let pos = event.getLocation();\n        let movePos = this.node.convertToNodeSpaceAR(pos)\n        // 这里确定是(movePos, movePos) 每次移动只选择右侧一张\n        this._checkSelectCard(movePos, movePos);\n        // 这里要传入起点和结束点，获取总的框取范围\n        this._checkSelectCardReverse(this._beginPos, movePos);\n    },\n\n    onTouchEnd(event){\n        this._onSelectCardEnd();\n    },\n\n    _onSelectCardEnd(){\n        for (let card of this.cardsArr){\n            let ctrl = card.getComponent(\"CardCtrl\");\n            if (ctrl.touched){\n                ctrl.selected = !ctrl.selected;\n            }\n            ctrl.touched = false;\n        }\n    },\n\n    _checkSelectCard(beginPos, endPos, isBegin){\n        const len = this.cardsArr.length;\n        if (isBegin){\n            for (let i=len-1; i>=0; i--){\n                let card = this.cardsArr[i];\n                if (card.getBoundingBox().contains(beginPos)){\n                    card.getComponent('CardCtrl').touched = true;\n                    return;\n                }\n            }\n        } else{\n            let w = Math.max(1, Math.abs(beginPos.x - endPos.x));\n            let h = Math.max(1, Math.abs(beginPos.y - endPos.y));\n            let x = Math.min(beginPos.x, endPos.x);\n            let y = Math.min(beginPos.y, endPos.y);\n            let touchRect = cc.rect(x, y, w, h);\n\n            for (let i=len-1; i>=0; i--){\n                let card = this.cardsArr[i];\n                if (card.getBoundingBox().contains(touchRect)){\n                    card.getComponent('CardCtrl').touched = true;\n                    return;\n                } \n            }\n        }\n    },\n\n    _checkSelectCardReverse(beginPos, endPos){\n        let p1 = beginPos.x < endPos.x ? beginPos : endPos;\n        let w = Math.abs(beginPos.x - endPos.x);\n        let h = Math.abs(beginPos.y - endPos.y);\n        let rect = cc.rect(p1.x, p1.y, w, h);\n\n        const len = this.cardsArr.length;\n        for (let i=len-1; i>=0; i--){\n            let card = this.cardsArr[i];\n            if (!cc.Intersection.rectRect(card.getBoundingBox(), rect)){\n                card.getComponent('CardCtrl').touched = false;\n            } else {\n                // 在矩形框内但是被旁边但牌压着也不算选中\n                // 最后一张（最上面但）需要特殊处理\n                if (p1.x - card.x >= this.CARD_DISTANCE && i != len - 1){\n                    card.getComponent('CardCtrl').touched = false;\n                }\n            }\n        }\n    }\n\n    // update (dt) {},\n});\n"]}