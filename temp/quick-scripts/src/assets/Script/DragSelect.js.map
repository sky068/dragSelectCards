{"version":3,"sources":["assets/Script/DragSelect.js"],"names":["cc","Class","Component","start","node","on","Node","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","cardsArr","getChildren","card","CARD_DISTANCE","width","anchorX","getComponent","Layout","spacingX","log","event","pos","getLocation","beginPos","_beginPos","convertToNodeSpaceAR","_checkSelectCard","movePos","_checkSelectCardReverse","_onSelectCardEnd","ctrl","touched","selected","endPos","isBegin","len","length","i","rectContainsPoint","getBoundingBox","w","Math","max","abs","x","h","y","min","touchRect","rect","rectIntersectsRect","p1"],"mappings":"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","sourceRoot":"/","sourcesContent":["/**\n * Created by skyxu on 2018/11/1.\n * \n * 滑动选择卡牌组件\n * 把此组件拖放到卡牌根节点即可，卡牌根节点添加cc.Layout组件来自动布局\n * \n */\n\n\ncc.Class({\n    extends: cc.Component,\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n\n        this.cardsArr = this.node.getChildren();\n        let card = this.cardsArr[0];\n        // 指左侧卡牌锚点到右侧相邻卡牌边缘的距离\n        this.CARD_DISTANCE = card.width*card.anchorX + this.node.getComponent(cc.Layout).spacingX;\n        cc.log(\"CARD_DISTANCE: \" + this.CARD_DISTANCE);\n    },\n\n    onTouchStart(event){\n        let pos = event.getLocation();\n        let beginPos = this._beginPos = this.node.convertToNodeSpaceAR(pos);\n        this._checkSelectCard(beginPos, beginPos, true);\n    },\n\n    onTouchMove(event){\n        let pos = event.getLocation();\n        let movePos = this.node.convertToNodeSpaceAR(pos)\n        // 这里确定是(movePos, movePos) 每次移动只选择右侧一张\n        this._checkSelectCard(movePos, movePos);\n        // 这里要传入起点和结束点，获取总的框取范围\n        this._checkSelectCardReverse(this._beginPos, movePos);\n    },\n\n    onTouchEnd(event){\n        this._onSelectCardEnd();\n    },\n\n    _onSelectCardEnd(){\n        for (let card of this.cardsArr){\n            let ctrl = card.getComponent(\"CardCtrl\");\n            if (ctrl.touched){\n                ctrl.selected = !ctrl.selected;\n            }\n            ctrl.touched = false;\n        }\n    },\n\n    _checkSelectCard(beginPos, endPos, isBegin){\n        let len = this.cardsArr.length;\n        if (isBegin){\n            for (let i=len-1; i>=0; i--){\n                let card = this.cardsArr[i];\n                if (cc.rectContainsPoint(card.getBoundingBox(), beginPos)){\n                    card.getComponent('CardCtrl').touched = true;\n                    return;\n                }\n            }\n        } else{\n            let w = Math.max(1, Math.abs(beginPos.x - endPos.x));\n            let h = Math.max(1, Math.abs(beginPos.y - endPos.y));\n            let x = Math.min(beginPos.x, endPos.x);\n            let y = Math.min(beginPos.y, endPos.y);\n            let touchRect = cc.rect(x, y, w, h);\n\n            for (let i=len-1; i>=0; i--){\n                let card = this.cardsArr[i];\n                if (cc.rectIntersectsRect(card.getBoundingBox(), touchRect)){\n                    card.getComponent('CardCtrl').touched = true;\n                    return;\n                }\n            }\n        }\n    },\n\n    _checkSelectCardReverse(beginPos, endPos){\n        let p1 = beginPos.x < endPos.x ? beginPos : endPos;\n        let w = Math.abs(beginPos.x - endPos.x);\n        let h = Math.abs(beginPos.y - endPos.y);\n        let rect = cc.rect(p1.x, p1.y, w, h);\n\n        let len = this.cardsArr.length;\n        for (let i=len-1; i>=0; i--){\n            let card = this.cardsArr[i];\n            if (!cc.rectIntersectsRect(card.getBoundingBox(), rect)){\n                card.getComponent('CardCtrl').touched = false;\n            }\n        }\n\n        // 从右向左框取然后又移动回右侧则取消左侧已经选择的卡牌\n        for (let i=0; i<len; i++){\n            let card = this.cardsArr[i];\n            if (p1.x - card.x >= this.CARD_DISTANCE){\n                card.getComponent('CardCtrl').touched = false;\n            }\n        }\n    }\n\n    // update (dt) {},\n});\n"]}